#! /bin/sh

# This is a simple build script that builds all MLB files in the current
# directory. Standard ML does not define how to build programs, so we have to do
# it ourselves.
#
# MLton works directly on MLB files, but Poly/ML does not. Therefore, we
# generate a Poly/ML top-level file from the MLB file and compile that instead.

set -e

BUILD_DIR=_build

if [ -z "$SML_COMPILER" ]; then
    echo "SML_COMPILER not set, using polyc (alternatives: mlton)"
    SML_COMPILER=polyc
fi

build () {
    BUILD_FILE="$1"
    PROG=$(basename -s .mlb "$1")
    echo "Building $1"
    case $SML_COMPILER in
        polyc)
            POLY_TOPLEVEL=$BUILD_DIR/"$BUILD_FILE".poly.sml
            echo "(* Generated by build.sh *)" > "$POLY_TOPLEVEL"
            grep -e "\\.sml" -e "\\.sig" "$BUILD_FILE" | grep -v "main\\.sml" | xargs printf "use \"%s\";\n" >> "$POLY_TOPLEVEL"
            polyc -o $BUILD_DIR/"$PROG" "$POLY_TOPLEVEL"
            ;;
        mlton)
            mlton -output $BUILD_DIR/"$PROG" "$BUILD_FILE"
            ;;
        *)
            echo "Unknown compiler $SML_COMPILER"
            exit 1
            ;;
    esac
}

mkdir -p $BUILD_DIR
for build_file in *.mlb; do
    build "$build_file"
done
